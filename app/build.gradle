plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    id("kotlin-kapt")
    id("com.google.dagger.hilt.android")
}
def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))
def geminiApiKey = localProperties.getProperty("GEMINI_API_KEY")
def weatherApiKey = localProperties.getProperty("WEATHER_API_KEY")
android {
    namespace 'com.erendogan6.havatahminim'
    compileSdk 34

    defaultConfig {
        applicationId "com.erendogan6.havatahminim"
        minSdk 26
        targetSdk 35
        versionCode 4
        versionName "1.3"
        buildConfigField("String", "GEMINI_API_KEY", "\"${geminiApiKey}\"")
        buildConfigField("String", "WEATHER_API_KEY", "\"${weatherApiKey}\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.13'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    //Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson

    //OkHttp
    implementation libs.okhttp
    implementation libs.logging.interceptor

    //Hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.android.compiler)
    implementation libs.androidx.hilt.navigation.compose

    //ViewModel
    implementation libs.androidx.lifecycle.viewmodel.compose

    //Location
    implementation libs.play.services.location

    //Coroutines
    implementation(libs.kotlinx.coroutines.android)
    implementation(libs.kotlinx.coroutines.play.services)

    //Gemini API
    implementation(libs.generativeai)

    //Room
    implementation libs.androidx.room.runtime
    kapt libs.androidx.room.compiler
    implementation libs.androidx.room.ktx

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}
kapt {
    correctErrorTypes = true
}